// <auto-generated />
using DebitiNBE_API.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DebitiNBE_API.Migrations
{
    [DbContext(typeof(DebitiContext))]
    [Migration("20200701001035_Debiti migratin")]
    partial class Debitimigratin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DebitiNBE_API.Models.DB.Friendlist", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_ID")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId1")
                        .HasColumnName("user_ID1")
                        .HasColumnType("int(11)");

                    b.Property<string>("Stato")
                        .IsRequired()
                        .HasColumnType("enum('active','accepted','ignored','blocked')");

                    b.HasKey("UserId", "UserId1")
                        .HasName("PRIMARY");

                    b.HasIndex("UserId")
                        .HasName("fk_user_has_user_user_idx");

                    b.HasIndex("UserId1")
                        .HasName("fk_user_has_user_user1_idx");

                    b.ToTable("friendlist");
                });

            modelBuilder.Entity("DebitiNBE_API.Models.DB.Paymentrequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<float>("Credito")
                        .HasColumnType("float");

                    b.Property<int>("RequestId")
                        .HasColumnName("Request_ID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Stato")
                        .IsRequired()
                        .HasColumnType("enum('active','accepted','dennied')");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .HasName("fk_PaymentRequest_Request1_idx");

                    b.ToTable("paymentrequest");
                });

            modelBuilder.Entity("DebitiNBE_API.Models.DB.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<float>("Credito")
                        .HasColumnType("float");

                    b.Property<int>("IdMandante")
                        .HasColumnName("ID_mandante")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdRicevente")
                        .HasColumnName("ID_ricevente")
                        .HasColumnType("int(11)");

                    b.Property<string>("Stato")
                        .IsRequired()
                        .HasColumnType("enum('waiting','accepted','dennied','completed')");

                    b.HasKey("Id");

                    b.HasIndex("IdMandante")
                        .HasName("fk_Request_user1_idx");

                    b.HasIndex("IdRicevente")
                        .HasName("fk_Request_user2_idx");

                    b.ToTable("request");
                });

            modelBuilder.Entity("DebitiNBE_API.Models.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Lastname")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("Email_UNIQUE");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("Username_UNIQUE");

                    b.ToTable("user");
                });

            modelBuilder.Entity("DebitiNBE_API.Models.DB.Friendlist", b =>
                {
                    b.HasOne("DebitiNBE_API.Models.DB.User", "User")
                        .WithMany("FriendlistUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_has_user_user")
                        .IsRequired();

                    b.HasOne("DebitiNBE_API.Models.DB.User", "UserId1Navigation")
                        .WithMany("FriendlistUserId1Navigation")
                        .HasForeignKey("UserId1")
                        .HasConstraintName("fk_user_has_user_user1")
                        .IsRequired();
                });

            modelBuilder.Entity("DebitiNBE_API.Models.DB.Paymentrequest", b =>
                {
                    b.HasOne("DebitiNBE_API.Models.DB.Request", "Request")
                        .WithMany("Paymentrequest")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_PaymentRequest_Request1")
                        .IsRequired();
                });

            modelBuilder.Entity("DebitiNBE_API.Models.DB.Request", b =>
                {
                    b.HasOne("DebitiNBE_API.Models.DB.User", "IdMandanteNavigation")
                        .WithMany("RequestIdMandanteNavigation")
                        .HasForeignKey("IdMandante")
                        .HasConstraintName("fk_Request_user1")
                        .IsRequired();

                    b.HasOne("DebitiNBE_API.Models.DB.User", "IdRiceventeNavigation")
                        .WithMany("RequestIdRiceventeNavigation")
                        .HasForeignKey("IdRicevente")
                        .HasConstraintName("fk_Request_user2")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
